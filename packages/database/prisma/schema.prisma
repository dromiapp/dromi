// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id
  displayName String
  email       String @unique
  password    String

  createdAt DateTime  @default(now())
  deletedAt DateTime?

  sessions             Session[]
  workspaceMemberships WorkspaceMember[]
}

model Session {
  id        String   @id
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum PermissionFlag {
  NONE   @map("0") // 0
  VIEW   @map("1") // 1 << 0
  EDIT   @map("2") // 1 << 1
  CREATE @map("4") // 1 << 2
  DELETE @map("8") // 1 << 3
  MANAGE @map("16") // 1 << 4
}

enum Resource {
  WORKSPACE
  TODO
}

model Workspace {
  id          String    @id
  displayName String
  slug        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  members WorkspaceMember[]
}

model Permission {
  id       String   @id
  resource Resource
  flags    Int      @default(0)
  memberId String

  member WorkspaceMember @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@unique([memberId, resource])
}

model WorkspaceMember {
  id          String   @id
  workspaceId String
  userId      String
  isOwner     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  permissions Permission[]
  workspace   Workspace    @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([workspaceId, userId])
}
